{"ast":null,"code":"import React,{useState}from'react';import{NavLink,Navigate}from'react-router-dom';import{Button,Form,Grid,Segment,Message}from'semantic-ui-react';import{useAuth}from'../context/AuthContext';import{estateApi}from'../misc/EstateApi';import{parseJwt,handleLogError}from'../misc/Helpers';import Footer from\"../Footer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Signup(){const Auth=useAuth();const isLoggedIn=Auth.userIsAuthenticated();const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[name,setName]=useState('');const[email,setEmail]=useState('');const[isError,setIsError]=useState(false);const[errorMessage,setErrorMessage]=useState('');const handleInputChange=(e,_ref)=>{let{name,value}=_ref;if(name==='username'){setUsername(value);}else if(name==='password'){setPassword(value);}else if(name==='name'){setName(value);}else if(name==='email'){setEmail(value);}};const handleSubmit=async e=>{e.preventDefault();if(!(username&&password&&name&&email)){setIsError(true);setErrorMessage('Please, inform all fields!');return;}const user={username,password,name,email};try{const response=await estateApi.signup(user);const{accessToken}=response.data;const data=parseJwt(accessToken);const authenticatedUser={data,accessToken};Auth.userLogin(authenticatedUser);setUsername('');setPassword('');setIsError(false);setErrorMessage('');}catch(error){handleLogError(error);if(error.response&&error.response.data){const errorData=error.response.data;let errorMessage='Invalid fields';if(errorData.status===409){errorMessage=errorData.message;}else if(errorData.status===400){errorMessage=errorData.errors[0].defaultMessage;}setIsError(true);setErrorMessage(errorMessage);}}};if(isLoggedIn){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Grid,{textAlign:\"center\",children:/*#__PURE__*/_jsxs(Grid.Column,{style:{maxWidth:450},children:[/*#__PURE__*/_jsx(Form,{size:\"large\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Segment,{children:[/*#__PURE__*/_jsx(Form.Input,{fluid:true,autoFocus:true,name:\"username\",icon:\"user\",iconPosition:\"left\",placeholder:\"Username\",onChange:handleInputChange}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"password\",icon:\"lock\",iconPosition:\"left\",placeholder:\"Password\",type:\"password\",onChange:handleInputChange}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"name\",icon:\"address card\",iconPosition:\"left\",placeholder:\"Name\",onChange:handleInputChange}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"email\",icon:\"at\",iconPosition:\"left\",placeholder:\"Email\",onChange:handleInputChange}),/*#__PURE__*/_jsx(Button,{color:\"grey\",fluid:true,size:\"large\",children:\"Signup\"})]})}),/*#__PURE__*/_jsxs(Message,{children:[\"Already have an account? \",/*#__PURE__*/_jsx(NavLink,{to:\"/login\",color:\"grey\",children:\"Login\"})]}),isError&&/*#__PURE__*/_jsx(Message,{negative:true,children:errorMessage})]})}),/*#__PURE__*/_jsx(Footer,{})]});}export default Signup;","map":{"version":3,"names":["React","useState","NavLink","Navigate","Button","Form","Grid","Segment","Message","useAuth","estateApi","parseJwt","handleLogError","Footer","jsx","_jsx","jsxs","_jsxs","Signup","Auth","isLoggedIn","userIsAuthenticated","username","setUsername","password","setPassword","name","setName","email","setEmail","isError","setIsError","errorMessage","setErrorMessage","handleInputChange","e","_ref","value","handleSubmit","preventDefault","user","response","signup","accessToken","data","authenticatedUser","userLogin","error","errorData","status","message","errors","defaultMessage","to","children","textAlign","Column","style","maxWidth","size","onSubmit","Input","fluid","autoFocus","icon","iconPosition","placeholder","onChange","type","color","negative"],"sources":["/Users/timurinamkhojayev/Desktop/inamkhojayev-java-spring-project-main/estate-client-react/src/components/home/Signup.js"],"sourcesContent":["import React, {useState} from 'react'\nimport {NavLink, Navigate} from 'react-router-dom'\nimport {Button, Form, Grid, Segment, Message} from 'semantic-ui-react'\nimport {useAuth} from '../context/AuthContext'\nimport {estateApi} from '../misc/EstateApi'\nimport {parseJwt, handleLogError} from '../misc/Helpers'\nimport Footer from \"../Footer\";\n\nfunction Signup() {\n    const Auth = useAuth()\n    const isLoggedIn = Auth.userIsAuthenticated()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isError, setIsError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const handleInputChange = (e, {name, value}) => {\n        if (name === 'username') {\n            setUsername(value)\n        } else if (name === 'password') {\n            setPassword(value)\n        } else if (name === 'name') {\n            setName(value)\n        } else if (name === 'email') {\n            setEmail(value)\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        if (!(username && password && name && email)) {\n            setIsError(true)\n            setErrorMessage('Please, inform all fields!')\n            return\n        }\n\n        const user = {username, password, name, email}\n\n        try {\n            const response = await estateApi.signup(user)\n            const {accessToken} = response.data\n            const data = parseJwt(accessToken)\n            const authenticatedUser = {data, accessToken}\n\n            Auth.userLogin(authenticatedUser)\n\n            setUsername('')\n            setPassword('')\n            setIsError(false)\n            setErrorMessage('')\n        } catch (error) {\n            handleLogError(error)\n            if (error.response && error.response.data) {\n                const errorData = error.response.data\n                let errorMessage = 'Invalid fields'\n                if (errorData.status === 409) {\n                    errorMessage = errorData.message\n                } else if (errorData.status === 400) {\n                    errorMessage = errorData.errors[0].defaultMessage\n                }\n                setIsError(true)\n                setErrorMessage(errorMessage)\n            }\n        }\n    }\n\n    if (isLoggedIn) {\n        return <Navigate to='/'/>\n    }\n\n    return (\n        <div>\n            <Grid textAlign='center'>\n                <Grid.Column style={{maxWidth: 450}}>\n                    <Form size='large' onSubmit={handleSubmit}>\n                        <Segment>\n                            <Form.Input\n                                fluid\n                                autoFocus\n                                name='username'\n                                icon='user'\n                                iconPosition='left'\n                                placeholder='Username'\n                                onChange={handleInputChange}\n                            />\n                            <Form.Input\n                                fluid\n                                name='password'\n                                icon='lock'\n                                iconPosition='left'\n                                placeholder='Password'\n                                type='password'\n                                onChange={handleInputChange}\n                            />\n                            <Form.Input\n                                fluid\n                                name='name'\n                                icon='address card'\n                                iconPosition='left'\n                                placeholder='Name'\n                                onChange={handleInputChange}\n                            />\n                            <Form.Input\n                                fluid\n                                name='email'\n                                icon='at'\n                                iconPosition='left'\n                                placeholder='Email'\n                                onChange={handleInputChange}\n                            />\n                            <Button color='grey' fluid size='large'>Signup</Button>\n                        </Segment>\n                    </Form>\n                    <Message>{`Already have an account? `}\n                        <NavLink to=\"/login\" color='grey'>Login</NavLink>\n                    </Message>\n                    {isError && <Message negative>{errorMessage}</Message>}\n                </Grid.Column>\n            </Grid>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default Signup"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}