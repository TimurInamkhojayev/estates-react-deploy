{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{Navigate,useLocation}from'react-router-dom';import AuthContext from'../context/AuthContext';import{parseJwt}from'../misc/Helpers';import{jsx as _jsx}from\"react/jsx-runtime\";function OAuth2Redirect(){const{userLogin}=useContext(AuthContext);const[redirectTo,setRedirectTo]=useState('/login');const location=useLocation();useEffect(()=>{const accessToken=extractUrlParameter('token');if(accessToken){handleLogin(accessToken);const redirect='/';setRedirectTo(redirect);}},[]);const extractUrlParameter=key=>{return new URLSearchParams(location.search).get(key);};const handleLogin=accessToken=>{const data=parseJwt(accessToken);const user={data,accessToken};userLogin(user);};return/*#__PURE__*/_jsx(Navigate,{to:redirectTo});}export default OAuth2Redirect;","map":{"version":3,"names":["React","useContext","useEffect","useState","Navigate","useLocation","AuthContext","parseJwt","jsx","_jsx","OAuth2Redirect","userLogin","redirectTo","setRedirectTo","location","accessToken","extractUrlParameter","handleLogin","redirect","key","URLSearchParams","search","get","data","user","to"],"sources":["/Users/timurinamkhojayev/Desktop/inamkhojayev-java-spring-project-main/estate-client-react/src/components/home/OAuth2Redirect.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { Navigate, useLocation } from 'react-router-dom'\nimport AuthContext from '../context/AuthContext'\nimport { parseJwt } from '../misc/Helpers'\n\nfunction OAuth2Redirect() {\n  const { userLogin } = useContext(AuthContext)\n  const [redirectTo, setRedirectTo] = useState('/login')\n\n  const location = useLocation()\n\n  useEffect(() => {\n    const accessToken = extractUrlParameter('token')\n    if (accessToken) {\n      handleLogin(accessToken)\n      const redirect = '/'\n      setRedirectTo(redirect)\n    }\n  }, [])\n\n  const extractUrlParameter = (key) => {\n    return new URLSearchParams(location.search).get(key)\n  }\n\n  const handleLogin = (accessToken) => {\n    const data = parseJwt(accessToken)\n    const user = { data, accessToken }\n\n    userLogin(user)\n  };\n\n  return <Navigate to={redirectTo} />\n}\n\nexport default OAuth2Redirect"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC9D,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,MAAO,CAAAC,WAAW,KAAM,wBAAwB,CAChD,OAASC,QAAQ,KAAQ,iBAAiB,QAAAC,GAAA,IAAAC,IAAA,yBAE1C,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAAEC,SAAU,CAAC,CAAGV,UAAU,CAACK,WAAW,CAAC,CAC7C,KAAM,CAACM,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,QAAQ,CAAC,CAEtD,KAAM,CAAAW,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAE9BH,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,WAAW,CAAGC,mBAAmB,CAAC,OAAO,CAAC,CAChD,GAAID,WAAW,CAAE,CACfE,WAAW,CAACF,WAAW,CAAC,CACxB,KAAM,CAAAG,QAAQ,CAAG,GAAG,CACpBL,aAAa,CAACK,QAAQ,CAAC,CACzB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAF,mBAAmB,CAAIG,GAAG,EAAK,CACnC,MAAO,IAAI,CAAAC,eAAe,CAACN,QAAQ,CAACO,MAAM,CAAC,CAACC,GAAG,CAACH,GAAG,CAAC,CACtD,CAAC,CAED,KAAM,CAAAF,WAAW,CAAIF,WAAW,EAAK,CACnC,KAAM,CAAAQ,IAAI,CAAGhB,QAAQ,CAACQ,WAAW,CAAC,CAClC,KAAM,CAAAS,IAAI,CAAG,CAAED,IAAI,CAAER,WAAY,CAAC,CAElCJ,SAAS,CAACa,IAAI,CAAC,CACjB,CAAC,CAED,mBAAOf,IAAA,CAACL,QAAQ,EAACqB,EAAE,CAAEb,UAAW,CAAE,CAAC,CACrC,CAEA,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}