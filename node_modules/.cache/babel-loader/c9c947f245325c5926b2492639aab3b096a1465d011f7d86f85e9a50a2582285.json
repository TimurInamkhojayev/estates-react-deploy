{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Navigate}from'react-router-dom';import{Container}from'semantic-ui-react';import EstateList from'./EstateList';import{useAuth}from'../context/AuthContext';import{estateApi}from'../misc/EstateApi';import{handleLogError}from'../misc/Helpers';import Footer from\"../Footer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UserPage(){const Auth=useAuth();const user=Auth.getUser();const isUser=user.data.rol[0]==='USER';const[estates,setEstates]=useState([]);const[estateTextSearch,setEstateTextSearch]=useState('');const[isEstatesLoading,setIsEstatesLoading]=useState(false);useEffect(()=>{handleGetEstates();},[]);const handleInputChange=(e,_ref)=>{let{name,value}=_ref;if(name==='estateTextSearch'){setEstateTextSearch(value);}};const handleGetEstates=async()=>{setIsEstatesLoading(true);try{const response=await estateApi.getEstates(user);setEstates(response.data);}catch(error){handleLogError(error);}finally{setIsEstatesLoading(false);}};const handleSearchEstate=async()=>{try{const response=await estateApi.getEstates(user,estateTextSearch);const estates=response.data;setEstates(estates);}catch(error){handleLogError(error);setEstates([]);}};if(!isUser){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(EstateList,{isEstatesLoading:isEstatesLoading,estateTextSearch:estateTextSearch,estates:estates,handleInputChange:handleInputChange,handleSearchEstate:handleSearchEstate}),/*#__PURE__*/_jsx(Footer,{})]});}export default UserPage;","map":{"version":3,"names":["React","useEffect","useState","Navigate","Container","EstateList","useAuth","estateApi","handleLogError","Footer","jsx","_jsx","jsxs","_jsxs","UserPage","Auth","user","getUser","isUser","data","rol","estates","setEstates","estateTextSearch","setEstateTextSearch","isEstatesLoading","setIsEstatesLoading","handleGetEstates","handleInputChange","e","_ref","name","value","response","getEstates","error","handleSearchEstate","to","children"],"sources":["/Users/timurinamkhojayev/Desktop/inamkhojayev-java-spring-project-main/estate-client-react/src/components/user/UserPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport EstateList from './EstateList'\nimport { useAuth } from '../context/AuthContext'\nimport { estateApi } from '../misc/EstateApi'\nimport { handleLogError } from '../misc/Helpers'\nimport Footer from \"../Footer\";\n\nfunction UserPage() {\n  const Auth = useAuth()\n  const user = Auth.getUser()\n  const isUser = user.data.rol[0] === 'USER'\n\n  const [estates, setEstates] = useState([])\n  const [estateTextSearch, setEstateTextSearch] = useState('')\n  const [isEstatesLoading, setIsEstatesLoading] = useState(false)\n\n  useEffect(() => {\n    handleGetEstates()\n  }, [])\n\n  const handleInputChange = (e, { name, value }) => {\n    if (name === 'estateTextSearch') {\n      setEstateTextSearch(value)\n    }\n  }\n\n  const handleGetEstates = async () => {\n    setIsEstatesLoading(true)\n    try {\n      const response = await estateApi.getEstates(user)\n      setEstates(response.data)\n    } catch (error) {\n      handleLogError(error)\n    } finally {\n      setIsEstatesLoading(false)\n    }\n  }\n\n  const handleSearchEstate = async () => {\n    try {\n      const response = await estateApi.getEstates(user, estateTextSearch)\n      const estates = response.data\n      setEstates(estates)\n    } catch (error) {\n      handleLogError(error)\n      setEstates([])\n    }\n  }\n\n  if (!isUser) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <Container>\n      <EstateList\n        isEstatesLoading={isEstatesLoading}\n        estateTextSearch={estateTextSearch}\n        estates={estates}\n        handleInputChange={handleInputChange}\n        handleSearchEstate={handleSearchEstate}\n      />\n      <Footer/>\n    </Container>\n  )\n}\n\nexport default UserPage"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,SAAS,KAAQ,mBAAmB,CAC7C,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,OAASC,OAAO,KAAQ,wBAAwB,CAChD,OAASC,SAAS,KAAQ,mBAAmB,CAC7C,OAASC,cAAc,KAAQ,iBAAiB,CAChD,MAAO,CAAAC,MAAM,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/B,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,KAAM,CAAAC,IAAI,CAAGT,OAAO,CAAC,CAAC,CACtB,KAAM,CAAAU,IAAI,CAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAC3B,KAAM,CAAAC,MAAM,CAAGF,IAAI,CAACG,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,GAAK,MAAM,CAE1C,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACqB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACuB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CAE/DD,SAAS,CAAC,IAAM,CACd0B,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,iBAAiB,CAAGA,CAACC,CAAC,CAAAC,IAAA,GAAsB,IAApB,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAAF,IAAA,CAC3C,GAAIC,IAAI,GAAK,kBAAkB,CAAE,CAC/BP,mBAAmB,CAACQ,KAAK,CAAC,CAC5B,CACF,CAAC,CAED,KAAM,CAAAL,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnCD,mBAAmB,CAAC,IAAI,CAAC,CACzB,GAAI,CACF,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAA1B,SAAS,CAAC2B,UAAU,CAAClB,IAAI,CAAC,CACjDM,UAAU,CAACW,QAAQ,CAACd,IAAI,CAAC,CAC3B,CAAE,MAAOgB,KAAK,CAAE,CACd3B,cAAc,CAAC2B,KAAK,CAAC,CACvB,CAAC,OAAS,CACRT,mBAAmB,CAAC,KAAK,CAAC,CAC5B,CACF,CAAC,CAED,KAAM,CAAAU,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAA1B,SAAS,CAAC2B,UAAU,CAAClB,IAAI,CAAEO,gBAAgB,CAAC,CACnE,KAAM,CAAAF,OAAO,CAAGY,QAAQ,CAACd,IAAI,CAC7BG,UAAU,CAACD,OAAO,CAAC,CACrB,CAAE,MAAOc,KAAK,CAAE,CACd3B,cAAc,CAAC2B,KAAK,CAAC,CACrBb,UAAU,CAAC,EAAE,CAAC,CAChB,CACF,CAAC,CAED,GAAI,CAACJ,MAAM,CAAE,CACX,mBAAOP,IAAA,CAACR,QAAQ,EAACkC,EAAE,CAAC,GAAG,CAAE,CAAC,CAC5B,CAEA,mBACExB,KAAA,CAACT,SAAS,EAAAkC,QAAA,eACR3B,IAAA,CAACN,UAAU,EACToB,gBAAgB,CAAEA,gBAAiB,CACnCF,gBAAgB,CAAEA,gBAAiB,CACnCF,OAAO,CAAEA,OAAQ,CACjBO,iBAAiB,CAAEA,iBAAkB,CACrCQ,kBAAkB,CAAEA,kBAAmB,CACxC,CAAC,cACFzB,IAAA,CAACF,MAAM,GAAC,CAAC,EACA,CAAC,CAEhB,CAEA,cAAe,CAAAK,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}